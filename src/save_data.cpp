#include <iostream>
#include <fstream>
#include <string>
#include <ctime>

using std::cout;
using std::endl;

// // –ö–ª–∞—Å—Å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞—Ç—ã —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞–∫–æ–≥–æ-—Ç–æ —Å–æ–±—ã—Ç–∏—è, –∏–º—è —Å–æ–±—ã—Ç–∏—è. 
// class Date
// {
//     private:
//         std::string
//     public:
//         // –¥–µ–Ω—å
//         unsigned getDateDay()
//         {

//         }

//         // –º–µ—Å—è—Ü
//         unsigned getDateMonth()
//         {


//         }

//         // –≥–æ–¥
//         unsigned getDateYear()
//         {
            
//         }

//         std::string
// };

// –∫–ª–∞—Å—Å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞–¥–∞—á–∏ (—Ç–æ—Ç–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –µ—ë –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è,
// –∏–º—è —Å–æ–±—ã—Ç–∏—è, –Ω–∞ –∫–∞–∫—É—é –¥–∞—Ç—É –æ–Ω–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω–æ
class Task
{
    private:
        // —Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 20 –∏–ª–∏ 18) –Ω–∞—á–∞–ª–∞ –∏ —Å–ª–µ–¥—É—é—â–µ–π –¥–∞—Ç–æ–π –∫–æ–Ω–µ—Ü
        unsigned start_end_month[2];
        unsigned start_end_day[2];
        unsigned start_end_hour[2];
        unsigned start_end_minute[2];
        unsigned start_end_seconds[2];
        unsigned all_time_work_minutes;

        double totalTime; // —Å–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ (–≤ –º–∏–Ω—É—Ç–∞—Ö) –ø—Ä–æ—à–ª–æ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
        std::string name_task;
        unsigned day_task, month_task, year_task_YYYY; // –¥–∞—Ç–∞ –Ω–∞ –∫–∞–∫–æ–π –¥–µ–Ω—å –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∑–∞–º–µ—Ç–∫–∞
    public:

        Task(std::string name_task = "None name", unsigned day_task = 0, unsigned month_task = 12, unsigned year_task_YYYY = 0)
        {
            // –ø—Ä–∏—Å–≤–∞–∏–≤–∞–∏–≤–∞–µ–º –∑–Ω–∞–µ–Ω–∏—è –ø–æ–ª—è–º
            this -> name_task = name_task;
            this -> day_task = day_task;
            this -> month_task = month_task;
            this -> year_task_YYYY = year_task_YYYY;
        }
        void startTime()
        {
            // –ó–∞—Å–µ–∫–∞–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è
            std::time_t current_time = std::time(nullptr);
            std::tm* local_time = std::localtime(&current_time);

            start_end_month[0] = local_time -> tm_mon;
            start_end_day[0] = local_time -> tm_mday;
            start_end_hour[0] = local_time -> tm_hour;
            start_end_minute[0] = local_time -> tm_min;
            start_end_seconds[0] = local_time -> tm_sec;

        }
        void endTime()
        {
            // –ó–∞—Å–µ–∫–∞–µ–º –∫–æ–Ω–µ—Ü –≤—Ä–µ–º–µ–Ω–∏ –∏ –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –∫ –æ–±—â–µ–º—É –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏
            std::time_t current_time = std::time(nullptr);
            std::tm* local_time = std::localtime(&current_time);

            start_end_month[1] = local_time -> tm_mon;
            start_end_day[1] = local_time -> tm_mday;
            start_end_hour[1] = local_time -> tm_hour;
            start_end_minute[1] = local_time -> tm_min;
            start_end_seconds[1] = local_time -> tm_sec;

            unsigned fewMonth = start_end_month[1] - start_end_month[0];
            unsigned fewDay = start_end_day[1] - start_end_day[0];
            unsigned fewHour = start_end_hour[1] - start_end_hour[0];
            unsigned fewMinutes = start_end_minute[1] - start_end_minute[0];
            unsigned fewSeconds = start_end_seconds[1] - start_end_seconds[0];

            // –¥–æ–±–∞–≤–ª—è–µ–º —Ç–æ—Ç–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è
            this -> totalTime += (fewSeconds / 60); // –¥–æ–±–∞–≤–ª—è–µ–º —Å–µ–∫—É–Ω–¥—ã
            this -> totalTime += fewMinutes; // –¥–æ–±–∞–≤–ª—è–µ–º –º–∏–Ω—É—Ç—ã
            this -> totalTime += (fewHour * 60); // –¥–æ–±–∞–≤–≤–ª—è–µ–º —á–∞—Å—ã
            this -> totalTime += (fewDay * 1440); // –¥–æ–±–∞–≤–ª—è–µ–º –¥–Ω–∏ 
            this -> totalTime += (fewMonth * 43200); // –¥–æ–±–∞–≤–ª—è–µ–º –º–µ—Å—è—Ü–∞

            cout << "–í—Å–µ–≥–æ –ø—Ä–æ—à–ª–æ –º–∏–Ω—É—Ç: " << this -> totalTime << endl;
        }

        // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è N –¥–Ω–µ–π –∫ –¥–∞—Ç–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –∑–∞–º–µ—Ç–∫–∏ (–Ω–∞ –∫–∞–∫–æ–π –¥–µ–Ω—å –æ–Ω–∞ –∑–∞–ø–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω–∞)
        void changeDateToNNext()
        {
            // —Å–¥–µ–ª–∞—Ç—å
        }

        void printInfoTask()
        {
            cout << "üë§\t–ò–º—è –∑–∞–¥–∞—á–∏: " << name_task << endl;
            cout << "üóìÔ∏è\t–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –¥–∞—Ç–∞, –≤ –∫–æ—Ç–æ—Ä—É—é –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å —ç—Ç—É –∑–∞–¥–∞—á—É: " << day_task << "/" << month_task << year_task_YYYY << endl;
            cout << "‚úÖ\t–í—ã —É–∂–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç–µ —ç—Ç—É –∑–∞–¥–∞—á—É: " << totalTime << " –º–∏–Ω—É—Ç" << endl;
        }
};

int main()
{
    Task test_task("–¢–µ—Å—Ç–æ–≤–æ–µ", 1, 10, 2025);
    std::string test {};

    test_task.startTime();
    std::cin >> test;
    test_task.endTime();

    test_task.printInfoTask();
}